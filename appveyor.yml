environment:
  encrypt_token:
    secure: 2Tozd/hUxQZSOt/m/E5Spg==
  nodejs_version: "0.12"
  COVERALLS_GIT_BRANCH: '$(APPVEYOR_REPO_BRANCH)'

init:
  - ps: $env:ITDEPENDS_IS_PR = ($env:APPVEYOR_PULL_REQUEST_NUMBER)
  - ps: $env:ITDEPENDS_IS_MASTER = ($env:APPVEYOR_REPO_BRANCH -eq 'master')
  - ps: $env:ITDEPENDS_MASTER_NOT_PR = ($env:ITDEPENDS_IS_MASTER -and (-not $env:ITDEPENDS_IS_PR))

install:
  - ps: Write-Host ("APPVEYOR_REPO_BRANCH:", $env:APPVEYOR_REPO_BRANCH)
  - ps: Write-Host ("APPVEYOR_REPO_TAG_NAME:", $env:APPVEYOR_REPO_TAG_NAME)
  - ps: Write-Host ("ITDEPENDS_IS_PR:", $env:ITDEPENDS_IS_PR)
  - ps: Write-Host ("ITDEPENDS_IS_MASTER:", $env:ITDEPENDS_IS_MASTER)
  - ps: Write-Host ("ITDEPENDS_MASTER_NOT_PR:", $env:ITDEPENDS_MASTER_NOT_PR)
  - ps: >-
      if(-not $env:ITDEPENDS_IS_PR) {
         ./build/tools/decrypt-files.ps1
      }
  - ps: Install-Product node $env:nodejs_version
  - npm install
  - npm install -g gulp

test_script:
  - gulp continous-integration

build: off

artifacts:
  - path: 'out\build\*.js'
    name: it-depends-library
  - path: 'out\reports\coverage.html'
    name: coverage-html

on_success:
  - ps: >-
      if($env:APPVEYOR_REPO_TAG_NAME -and $env:ITDEPENDS_MASTER_NOT_PR) {
         ./build/tools/publish-npm.ps1
      }

deploy:
  tag: '$(APPVEYOR_REPO_TAG_NAME)'
  provider: GitHub
  auth_token:
    secure: iIQYZTIjnJwRMu4NGFO9iDWVxiULK/6RfSWY6R9Z8W7daJPdGQGMBqblEcpYa9xZ
  artifact: it-depends-library
  on:
    branch: master
    appveyor_repo_tag: true

cache:
  - C:\Users\appveyor\AppData\Roaming\npm\node_modules -> package.json  # global npm modules
  - C:\Users\appveyor\AppData\Roaming\npm-cache -> package.json         # npm cache
  - node_modules -> package.json